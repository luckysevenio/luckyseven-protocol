/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DAIInterestRateModelV3,
  DAIInterestRateModelV3Interface,
} from "../DAIInterestRateModelV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pot_",
        type: "address",
      },
      {
        internalType: "address",
        name: "jug_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "assumedOneMinusReserveFactorMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "dsrPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "gapPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "kink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "poke",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gapPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
    ],
    name: "updateJumpRateModel",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b3b38038062001b3b833981810160405260a08110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050506000808686848484848484806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cf858585856200019160201b60201c565b5050505050505050505062201480668e1bc9bf04000081620000ed57fe5b0460058190555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001866200029860201b60201c565b505050505062000a92565b620001ae62201480856200064260201b62000ca41790919060201c565b6002819055506200020b620001d582622014806200069460201b62000c1e1790919060201c565b620001f7670de0b6b3a7640000866200069460201b62000c1e1790919060201c565b6200064260201b62000ca41790919060201c565b6001819055506200022e62201480836200064260201b62000ca41790919060201c565b600381905550806004819055507f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d6002546001546003546004546040518085815260200184815260200183815260200182815260200194505050505060405180910390a150505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d366040518163ffffffff1660e01b815260040180807f4554482d410000000000000000000000000000000000000000000000000000008152506020019050604080518083038186803b1580156200032d57600080fd5b505afa15801562000342573d6000803e3d6000fd5b505050506040513d60408110156200035957600080fd5b8101908080519060200190929190805190602001909291905050505090506000620004bd600f620004a96b033b2e3c9fd0803ce800000062000495670de0b6b3a7640000620004816b033b2e3c9fd0803ce80000006200046d600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635001f3b56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200041b57600080fd5b505afa15801562000430573d6000803e3d6000fd5b505050506040513d60208110156200044757600080fd5b81019080805190602001909291905050508b6200071f60201b62000b4c1790919060201c565b620007a860201b62000bd41790919060201c565b6200069460201b62000c1e1790919060201c565b6200064260201b62000ca41790919060201c565b6200069460201b62000c1e1790919060201c565b905062000511670d2f13f7789f0000620004fd670de0b6b3a7640000620004e9620007fa60201b60201c565b6200069460201b62000c1e1790919060201c565b6200064260201b62000ca41790919060201c565b600281905550806002541015620005a1576200059560045462000581670de0b6b3a76400006200056d6005546200055960025488620007a860201b62000bd41790919060201c565b6200071f60201b62000b4c1790919060201c565b6200069460201b62000c1e1790919060201c565b6200064260201b62000ca41790919060201c565b600181905550620005e7565b620005e0600454620005cc670de0b6b3a76400006005546200069460201b62000c1e1790919060201c565b6200064260201b62000ca41790919060201c565b6001819055505b7f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d6002546001546003546004546040518085815260200184815260200183815260200182815260200194505050505060405180910390a15050565b60006200068c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200090360201b60201c565b905092915050565b600080831415620006a9576000905062000719565b6000828402905082848281620006bb57fe5b041462000714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018062001b1a6021913960400191505060405180910390fd5b809150505b92915050565b6000808284019050838110156200079e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000620007f283836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f7700815250620009ce60201b60201c565b905092915050565b6000620008fe600f620008ea633b9aca00620008d66b033b2e3c9fd0803ce8000000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663487bf0826040518163ffffffff1660e01b815260040160206040518083038186803b1580156200088557600080fd5b505afa1580156200089a573d6000803e3d6000fd5b505050506040513d6020811015620008b157600080fd5b8101908080519060200190929190505050620007a860201b62000bd41790919060201c565b6200064260201b62000ca41790919060201c565b6200069460201b62000c1e1790919060201c565b905090565b60008083118290620009b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620009775780820151818401526020810190506200095a565b50505050905090810190601f168015620009a55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620009c057fe5b049050809150509392505050565b600083831115829062000a7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000a4357808201518184015260208101905062000a26565b50505050905090810190601f16801562000a715780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6110788062000aa26000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063b9f9850a11610066578063b9f9850a14610340578063f14039de1461035e578063f52d21f31461037c578063fd2da3391461039a576100f5565b80638da5cb5b1461025a57806396456c5c146102a4578063a385fb96146102c2578063b8168816146102e0576100f5565b80632191f92a116100d35780632191f92a146101a65780636dac7cd5146101c85780636e71e2d8146101e65780638726bb891461023c576100f5565b806315f24053146100fa57806318178358146101505780632037f3e71461015a575b600080fd5b61013a6004803603606081101561011057600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506103b8565b6040518082815260200191505060405180910390f35b6101586103ce565b005b6101a46004803603608081101561017057600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919050505061070d565b005b6101ae6107e0565b604051808215151515815260200191505060405180910390f35b6101d06107e5565b6040518082815260200191505060405180910390f35b610226600480360360608110156101fc57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506107f1565b6040518082815260200191505060405180910390f35b61024461085f565b6040518082815260200191505060405180910390f35b610262610865565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ac61088a565b6040518082815260200191505060405180910390f35b6102ca61097b565b6040518082815260200191505060405180910390f35b61032a600480360360808110156102f657600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610982565b6040518082815260200191505060405180910390f35b610348610a20565b6040518082815260200191505060405180910390f35b610366610a26565b6040518082815260200191505060405180910390f35b610384610a2c565b6040518082815260200191505060405180910390f35b6103a2610a32565b6040518082815260200191505060405180910390f35b60006103c5848484610a38565b90509392505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d366040518163ffffffff1660e01b815260040180807f4554482d410000000000000000000000000000000000000000000000000000008152506020019050604080518083038186803b15801561046257600080fd5b505afa158015610476573d6000803e3d6000fd5b505050506040513d604081101561048c57600080fd5b81019080805190602001909291908051906020019092919050505050905060006105ca600f6105bc6b033b2e3c9fd0803ce80000006105ae670de0b6b3a76400006105a06b033b2e3c9fd0803ce8000000610592600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635001f3b56040518163ffffffff1660e01b815260040160206040518083038186803b15801561054857600080fd5b505afa15801561055c573d6000803e3d6000fd5b505050506040513d602081101561057257600080fd5b81019080805190602001909291905050508b610b4c90919063ffffffff16565b610bd490919063ffffffff16565b610c1e90919063ffffffff16565b610ca490919063ffffffff16565b610c1e90919063ffffffff16565b9050610608670d2f13f7789f00006105fa670de0b6b3a76400006105ec61088a565b610c1e90919063ffffffff16565b610ca490919063ffffffff16565b60028190555080600254101561067a5761066f600454610661670de0b6b3a764000061065360055461064560025488610bd490919063ffffffff16565b610b4c90919063ffffffff16565b610c1e90919063ffffffff16565b610ca490919063ffffffff16565b6001819055506106b2565b6106ab60045461069d670de0b6b3a7640000600554610c1e90919063ffffffff16565b610ca490919063ffffffff16565b6001819055505b7f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d6002546001546003546004546040518085815260200184815260200183815260200182815260200194505050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061101e6026913960400191505060405180910390fd5b6220148083816107be57fe5b046005819055506107d26000808484610cee565b6107da6103ce565b50505050565b600181565b670d2f13f7789f000081565b6000808314156108045760009050610858565b61085561082c8361081e8688610b4c90919063ffffffff16565b610bd490919063ffffffff16565b610847670de0b6b3a764000086610c1e90919063ffffffff16565b610ca490919063ffffffff16565b90505b9392505050565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610976600f610968633b9aca0061095a6b033b2e3c9fd0803ce8000000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663487bf0826040518163ffffffff1660e01b815260040160206040518083038186803b15801561091157600080fd5b505afa158015610925573d6000803e3d6000fd5b505050506040513d602081101561093b57600080fd5b8101908080519060200190929190505050610bd490919063ffffffff16565b610ca490919063ffffffff16565b610c1e90919063ffffffff16565b905090565b6220148081565b60008061099186868686610dd2565b905060006109ba856109ac888a610b4c90919063ffffffff16565b610bd490919063ffffffff16565b905060008114156109cf578192505050610a18565b60006109fd826109ef6109e061088a565b8b610c1e90919063ffffffff16565b610ca490919063ffffffff16565b9050610a128382610b4c90919063ffffffff16565b93505050505b949350505050565b60035481565b60025481565b60055481565b60045481565b600080610a468585856107f1565b90506004548111610a9c57610a94600254610a86670de0b6b3a7640000610a7860015486610c1e90919063ffffffff16565b610ca490919063ffffffff16565b610b4c90919063ffffffff16565b915050610b45565b6000610ae3600254610ad5670de0b6b3a7640000610ac7600154600454610c1e90919063ffffffff16565b610ca490919063ffffffff16565b610b4c90919063ffffffff16565b90506000610afc60045484610bd490919063ffffffff16565b9050610b3f82610b31670de0b6b3a7640000610b2360035486610c1e90919063ffffffff16565b610ca490919063ffffffff16565b610b4c90919063ffffffff16565b93505050505b9392505050565b600080828401905083811015610bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000610c1683836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f7700815250610e76565b905092915050565b600080831415610c315760009050610c9e565b6000828402905082848281610c4257fe5b0414610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610ffd6021913960400191505060405180910390fd5b809150505b92915050565b6000610ce683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610f36565b905092915050565b610d046220148085610ca490919063ffffffff16565b600281905550610d4c610d238262201480610c1e90919063ffffffff16565b610d3e670de0b6b3a764000086610c1e90919063ffffffff16565b610ca490919063ffffffff16565b600181905550610d686220148083610ca490919063ffffffff16565b600381905550806004819055507f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d6002546001546003546004546040518085815260200184815260200183815260200182815260200194505050505060405180910390a150505050565b600080610df083670de0b6b3a7640000610bd490919063ffffffff16565b90506000610dff878787610a38565b90506000610e30670de0b6b3a7640000610e228585610c1e90919063ffffffff16565b610ca490919063ffffffff16565b9050610e69670de0b6b3a7640000610e5b83610e4d8c8c8c6107f1565b610c1e90919063ffffffff16565b610ca490919063ffffffff16565b9350505050949350505050565b6000838311158290610f23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ee8578082015181840152602081019050610ecd565b50505050905090810190601f168015610f155780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610fe2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fa7578082015181840152602081019050610f8c565b50505050905090810190601f168015610fd45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610fee57fe5b04905080915050939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f6e6c7920746865206f776e6572206d61792063616c6c20746869732066756e6374696f6e2ea265627a7a72315820c83ac86e3c4e22fc200ccef8c6eab00f7c0a42ebddfdb01df91d078f3e15cc1264736f6c63430005110032536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77";

export class DAIInterestRateModelV3__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    pot_: string,
    jug_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAIInterestRateModelV3> {
    return super.deploy(
      jumpMultiplierPerYear,
      kink_,
      pot_,
      jug_,
      owner_,
      overrides || {}
    ) as Promise<DAIInterestRateModelV3>;
  }
  getDeployTransaction(
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    pot_: string,
    jug_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      jumpMultiplierPerYear,
      kink_,
      pot_,
      jug_,
      owner_,
      overrides || {}
    );
  }
  attach(address: string): DAIInterestRateModelV3 {
    return super.attach(address) as DAIInterestRateModelV3;
  }
  connect(signer: Signer): DAIInterestRateModelV3__factory {
    return super.connect(signer) as DAIInterestRateModelV3__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAIInterestRateModelV3Interface {
    return new utils.Interface(_abi) as DAIInterestRateModelV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAIInterestRateModelV3 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DAIInterestRateModelV3;
  }
}
