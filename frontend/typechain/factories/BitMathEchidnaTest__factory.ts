/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BitMathEchidnaTest,
  BitMathEchidnaTestInterface,
} from "../BitMathEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "input",
        type: "uint256",
      },
    ],
    name: "leastSignificantBitInvariant",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "input",
        type: "uint256",
      },
    ],
    name: "mostSignificantBitInvariant",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610349806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632d711e0c1461003b578063f94ac90e14610069575b600080fd5b6100676004803603602081101561005157600080fd5b8101908080359060200190929190505050610097565b005b6100956004803603602081101561007f57600080fd5b81019080803590602001909291905050506100d0565b005b60006100a282610111565b905060008160ff1660020a831614156100b757fe5b600060018260ff1660020a038316146100cc57fe5b5050565b60006100db82610238565b90508060ff1660020a8210156100ed57fe5b60ff8160ff16148061010757506001810160ff1660020a82105b61010d57fe5b5050565b600080821161011f57600080fd5b60ff905060006fffffffffffffffffffffffffffffffff80168316111561014b57608081039050610153565b608082901c91505b600067ffffffffffffffff8016831611156101735760408103905061017b565b604082901c91505b600063ffffffff8016831611156101975760208103905061019f565b602082901c91505b600061ffff8016831611156101b9576010810390506101c1565b601082901c91505b600060ff8016831611156101da576008810390506101e2565b600882901c91505b6000600f831611156101f957600481039050610201565b600482901c91505b600060038316111561021857600281039050610220565b600282901c91505b6000600183161115610233576001810390505b919050565b600080821161024657600080fd5b700100000000000000000000000000000000821061026c57608082901c91506080810190505b68010000000000000000821061028a57604082901c91506040810190505b64010000000082106102a457602082901c91506020810190505b6201000082106102bc57601082901c91506010810190505b61010082106102d357600882901c91506008810190505b601082106102e957600482901c91506004810190505b600482106102ff57600282901c91506002810190505b6002821061030e576001810190505b91905056fea26469706673582212206d294a39715d522260ffb9cee80e3d98c7c1fe10a14aec4b7a1398aa5db60ed564736f6c63430007060033";

export class BitMathEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BitMathEchidnaTest> {
    return super.deploy(overrides || {}) as Promise<BitMathEchidnaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BitMathEchidnaTest {
    return super.attach(address) as BitMathEchidnaTest;
  }
  connect(signer: Signer): BitMathEchidnaTest__factory {
    return super.connect(signer) as BitMathEchidnaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitMathEchidnaTestInterface {
    return new utils.Interface(_abi) as BitMathEchidnaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitMathEchidnaTest {
    return new Contract(address, _abi, signerOrProvider) as BitMathEchidnaTest;
  }
}
