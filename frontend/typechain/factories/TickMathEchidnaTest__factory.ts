/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TickMathEchidnaTest,
  TickMathEchidnaTestInterface,
} from "../TickMathEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "checkGetSqrtRatioAtTickInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "ratio",
        type: "uint160",
      },
    ],
    name: "checkGetTickAtSqrtRatioInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b28806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806347d38f4d1461003b578063df01e52d1461006c575b600080fd5b61006a6004803603602081101561005157600080fd5b81019080803560020b90602001909291905050506100b0565b005b6100ae6004803603602081101561008257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c8565b005b60006100bb826102bb565b90508073ffffffffffffffffffffffffffffffffffffffff166100e0600184036102bb565b73ffffffffffffffffffffffffffffffffffffffff16108015610139575061010a600183016102bb565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16105b61013f57fe5b6401000276a373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16101561017a57fe5b73fffd8963efd1fc6a506488495d951d5263988d2673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611156101c457fe5b5050565b60006101d3826106f6565b90506101de816102bb565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161015801561024f5750610220600182016102bb565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16105b61025557fe5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8160020b121561028557fe5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8160020b126102b757fe5b5050565b60008060008360020b126102d2578260020b6102da565b8260020b6000035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b811115610378576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f540000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060018316141561039c577001000000000000000000000000000000006103ae565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600060028316146103e85760806ffff97272373d413259a46990580e213a8202901c90505b6000600483161461040d5760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c90505b600060088316146104325760806fffe5caca7e10e4e61c3624eaa0941cd08202901c90505b600060108316146104575760806fffcb9843d60f6159c9db58835c9266448202901c90505b6000602083161461047c5760806fff973b41fa98c081472e6896dfb254c08202901c90505b600060408316146104a15760806fff2ea16466c96a3843ec78b326b528618202901c90505b600060808316146104c65760806ffe5dee046a99a2a811c461f1969c30538202901c90505b60006101008316146104ec5760806ffcbe86c7900a88aedcffc83b479aa3a48202901c90505b60006102008316146105125760806ff987a7253ac413176f2b074cf7815e548202901c90505b60006104008316146105385760806ff3392b0822b70005940c7a398e4b70f38202901c90505b600061080083161461055e5760806fe7159475a2c29b7443b29c7fa6e889d98202901c90505b60006110008316146105845760806fd097f3bdfd2022b8845ad8f792aa58258202901c90505b60006120008316146105aa5760806fa9f746462d870fdf8a65dc1f90e061e58202901c90505b60006140008316146105d05760806f70d869a156d2a1b890bb3df62baf32f78202901c90505b60006180008316146105f65760806f31be135f97d08fd981231505542fcfa68202901c90505b60006201000083161461061d5760806f09aa508b5b7a84e1c677de54f3e99bc98202901c90505b6000620200008316146106435760806e5d6af8dedb81196699c329225ee6048202901c90505b6000620400008316146106685760806d2216e584f5fa1ea926041bedfe988202901c90505b60006208000083161461068b5760806b048a170391f7dc42444e8fa28202901c90505b60008460020b13156106c457807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff816106c057fe5b0490505b600064010000000082816106d457fe5b06146106e15760016106e4565b60005b60ff16602082901c0192505050919050565b60006401000276a373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1610158015610778575073fffd8963efd1fc6a506488495d951d5263988d2673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16105b6107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f520000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060208373ffffffffffffffffffffffffffffffffffffffff16901b9050600081905060006fffffffffffffffffffffffffffffffff821160071b808217915082811c92505067ffffffffffffffff821160061b808217915082811c92505063ffffffff821160051b808217915082811c92505061ffff821160041b808217915082811c92505060ff821160031b808217915082811c925050600f821160021b808217915082811c9250506003821160011b808217915082811c92505060018211808217915050608081106108c857607f810383901c91506108d2565b80607f0383901b91505b6000604060808303901b9050828302607f1c92508260801c80603f1b8217915083811c935050828302607f1c92508260801c80603e1b8217915083811c935050828302607f1c92508260801c80603d1b8217915083811c935050828302607f1c92508260801c80603c1b8217915083811c935050828302607f1c92508260801c80603b1b8217915083811c935050828302607f1c92508260801c80603a1b8217915083811c935050828302607f1c92508260801c8060391b8217915083811c935050828302607f1c92508260801c8060381b8217915083811c935050828302607f1c92508260801c8060371b8217915083811c935050828302607f1c92508260801c8060361b8217915083811c935050828302607f1c92508260801c8060351b8217915083811c935050828302607f1c92508260801c8060341b8217915083811c935050828302607f1c92508260801c8060331b8217915083811c935050828302607f1c92508260801c8060321b82179150506000693627a301d71055774c8582029050600060806f028f6481ab7f045a5af012a19d003aaa8303901d9050600060806fdb2df09e81959a81455e260799a0632f8401901d90508060020b8260020b14610ae2578873ffffffffffffffffffffffffffffffffffffffff16610ab9826102bb565b73ffffffffffffffffffffffffffffffffffffffff161115610adb5781610add565b805b610ae4565b815b97505050505050505091905056fea26469706673582212208588b469567118c91411bad0333fb51f1ecd3988da386c8ab18ea9f947b6699064736f6c63430007060033";

export class TickMathEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TickMathEchidnaTest> {
    return super.deploy(overrides || {}) as Promise<TickMathEchidnaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickMathEchidnaTest {
    return super.attach(address) as TickMathEchidnaTest;
  }
  connect(signer: Signer): TickMathEchidnaTest__factory {
    return super.connect(signer) as TickMathEchidnaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickMathEchidnaTestInterface {
    return new utils.Interface(_abi) as TickMathEchidnaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickMathEchidnaTest {
    return new Contract(address, _abi, signerOrProvider) as TickMathEchidnaTest;
  }
}
