/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SwapMathEchidnaTest,
  SwapMathEchidnaTestInterface,
} from "../SwapMathEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceRaw",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceTargetRaw",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "int256",
        name: "amountRemaining",
        type: "int256",
      },
      {
        internalType: "uint24",
        name: "feePips",
        type: "uint24",
      },
    ],
    name: "checkComputeSwapStepInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610db5806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d7e3056f14610030575b600080fd5b6100c7600480360360a081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803562ffffff1690602001909291905050506100c9565b005b60008573ffffffffffffffffffffffffffffffffffffffff16116100ec57600080fd5b60008473ffffffffffffffffffffffffffffffffffffffff161161010f57600080fd5b60008162ffffff161161012157600080fd5b620f42408162ffffff161061013557600080fd5b60008060008061014889898989896103a2565b9350935093509350807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383111561017c57fe5b6000861215610197578560000382111561019257fe5b6101a4565b8581840111156101a357fe5b5b8773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141561022c57600083146101e257fe5b600082146101ec57fe5b600081146101f657fe5b8773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461022b57fe5b5b8773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146102865760008612156102795785600003821461027457fe5b610285565b858184011461028457fe5b5b5b8873ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161161032a578873ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1611156102ef57fe5b8773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16101561032557fe5b610397565b8873ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16101561036057fe5b8773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561039657fe5b5b505050505050505050565b60008060008060008873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1610159050600080881215905080156104515760006104048989620f42400362ffffff16620f42406105fe565b90508261041d576104188c8c8c60016106d8565b61042b565b61042a8b8d8c60016107b2565b5b955085811061043c578a965061044b565b6104488c8b83866108e8565b96505b5061049d565b81610468576104638b8b8b60006107b2565b610476565b6104758a8c8b60006106d8565b5b935083886000031061048a5789955061049c565b6104998b8a8a6000038561095a565b95505b5b60008673ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff161490508215610524578080156104e05750815b6104f6576104f1878d8c60016107b2565b6104f8565b855b9550808015610505575081155b61051b57610516878d8c60006106d8565b61051d565b845b945061056e565b80801561052e5750815b6105445761053f8c888c60016106d8565b610546565b855b9550808015610553575081155b610569576105648c888c60006107b2565b61056b565b845b94505b8115801561057e57508860000385115b1561058a578860000394505b8180156105c357508a73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b156105d25785890393506105ef565b6105ec868962ffffff168a620f42400362ffffff166109cc565b93505b50505095509550955095915050565b600080600080198587098587029250828110838203039150506000811415610639576000841161062d57600080fd5b838204925050506106d1565b80841161064557600080fd5b600084868809905082811182039150808303925060008586600003169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16111561071957838580955081965050505b8161076557610760836fffffffffffffffffffffffffffffffff1686860373ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000006105fe565b6107a8565b6107a7836fffffffffffffffffffffffffffffffff1686860373ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000006109cc565b5b9050949350505050565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1611156107f357838580955081965050505b6000606060ff16846fffffffffffffffffffffffffffffffff16901b9050600086860373ffffffffffffffffffffffffffffffffffffffff16905060008773ffffffffffffffffffffffffffffffffffffffff161161085157600080fd5b8361089b578673ffffffffffffffffffffffffffffffffffffffff1661088e83838973ffffffffffffffffffffffffffffffffffffffff166105fe565b8161089557fe5b046108dc565b6108db6108bf83838973ffffffffffffffffffffffffffffffffffffffff166109cc565b8873ffffffffffffffffffffffffffffffffffffffff16610a2a565b5b92505050949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff161161090c57600080fd5b6000846fffffffffffffffffffffffffffffffff161161092b57600080fd5b816109425761093d8585856001610a3d565b610950565b61094f8585856001610baf565b5b9050949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff161161097e57600080fd5b6000846fffffffffffffffffffffffffffffffff161161099d57600080fd5b816109b4576109af8585856000610baf565b6109c2565b6109c18585856000610a3d565b5b9050949350505050565b60006109d98484846105fe565b9050600082806109e557fe5b8486091115610a23577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110610a1a57600080fd5b80806001019150505b9392505050565b6000808284061182840401905092915050565b60008115610af357600073ffffffffffffffffffffffffffffffffffffffff8016841115610a9457610a8f846c01000000000000000000000000876fffffffffffffffffffffffffffffffff166105fe565b610ab8565b846fffffffffffffffffffffffffffffffff16606060ff1685901b81610ab657fe5b045b9050610aeb610ae6828873ffffffffffffffffffffffffffffffffffffffff16610d3990919063ffffffff16565b610d53565b915050610ba7565b600073ffffffffffffffffffffffffffffffffffffffff8016841115610b4257610b3d846c01000000000000000000000000876fffffffffffffffffffffffffffffffff166109cc565b610b66565b610b65606060ff1685901b866fffffffffffffffffffffffffffffffff16610a2a565b5b9050808673ffffffffffffffffffffffffffffffffffffffff1611610b8a57600080fd5b808673ffffffffffffffffffffffffffffffffffffffff16039150505b949350505050565b600080831415610bc157849050610d31565b6000606060ff16856fffffffffffffffffffffffffffffffff16901b90508215610ca85760008673ffffffffffffffffffffffffffffffffffffffff16858873ffffffffffffffffffffffffffffffffffffffff16870292508281610c2257fe5b041415610c645760008183019050828110610c6257610c58838973ffffffffffffffffffffffffffffffffffffffff16836109cc565b9350505050610d31565b505b610c9f82610c9a878a73ffffffffffffffffffffffffffffffffffffffff168681610c8b57fe5b04610d3990919063ffffffff16565b610a2a565b92505050610d31565b60008673ffffffffffffffffffffffffffffffffffffffff16858873ffffffffffffffffffffffffffffffffffffffff16870292508281610ce557fe5b04148015610cf257508082115b610cfb57600080fd5b60008183039050610d2b610d26848a73ffffffffffffffffffffffffffffffffffffffff16846109cc565b610d53565b93505050505b949350505050565b6000828284019150811015610d4d57600080fd5b92915050565b6000818291508173ffffffffffffffffffffffffffffffffffffffff1614610d7a57600080fd5b91905056fea2646970667358221220dc82049b7083c109ba75418a4fc0c9f7dc83d72b8dcf21325f0bdcba7e838dfd64736f6c63430007060033";

export class SwapMathEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapMathEchidnaTest> {
    return super.deploy(overrides || {}) as Promise<SwapMathEchidnaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapMathEchidnaTest {
    return super.attach(address) as SwapMathEchidnaTest;
  }
  connect(signer: Signer): SwapMathEchidnaTest__factory {
    return super.connect(signer) as SwapMathEchidnaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapMathEchidnaTestInterface {
    return new utils.Interface(_abi) as SwapMathEchidnaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapMathEchidnaTest {
    return new Contract(address, _abi, signerOrProvider) as SwapMathEchidnaTest;
  }
}
