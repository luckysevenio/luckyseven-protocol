/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Maximillion, MaximillionInterface } from "../Maximillion";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract CEther",
        name: "cEther_",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: true,
    inputs: [],
    name: "cEther",
    outputs: [
      {
        internalType: "contract CEther",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "repayBehalf",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "contract CEther",
        name: "cEther_",
        type: "address",
      },
    ],
    name: "repayBehalfExplicit",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104a43803806104a48339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610410806100946000396000f3fe6080604052600436106100345760003560e01c806319b68c0014610039578063367b7f05146100905780639f35c3d5146100f4575b600080fd5b34801561004557600080fd5b5061004e610138565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f2600480360360408110156100a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061015d565b005b6101366004803603602081101561010a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103ad565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600034905060008273ffffffffffffffffffffffffffffffffffffffff166317bfdfbc856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156101e357600080fd5b505af11580156101f7573d6000803e3d6000fd5b505050506040513d602081101561020d57600080fd5b810190808051906020019092919050505090508082111561030e578273ffffffffffffffffffffffffffffffffffffffff1663e597461982866040518363ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b1580156102a757600080fd5b505af11580156102bb573d6000803e3d6000fd5b50505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8284039081150290604051600060405180830381858888f19350505050158015610308573d6000803e3d6000fd5b506103a7565b8273ffffffffffffffffffffffffffffffffffffffff1663e597461983866040518363ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b15801561038d57600080fd5b505af11580156103a1573d6000803e3d6000fd5b50505050505b50505050565b6103d8816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661015d565b5056fea265627a7a72315820786601025a1e74e8665a3a3d7317f7b73c372e78535f9e35e1a1ce06b74891ca64736f6c63430005110032";

export class Maximillion__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    cEther_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Maximillion> {
    return super.deploy(cEther_, overrides || {}) as Promise<Maximillion>;
  }
  getDeployTransaction(
    cEther_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(cEther_, overrides || {});
  }
  attach(address: string): Maximillion {
    return super.attach(address) as Maximillion;
  }
  connect(signer: Signer): Maximillion__factory {
    return super.connect(signer) as Maximillion__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaximillionInterface {
    return new utils.Interface(_abi) as MaximillionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Maximillion {
    return new Contract(address, _abi, signerOrProvider) as Maximillion;
  }
}
