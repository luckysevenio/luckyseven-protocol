/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TickEchidnaTest,
  TickEchidnaTestInterface,
} from "../TickEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
    ],
    name: "checkTickSpacingToParametersInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061029d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063858027e514610030575b600080fd5b61005f6004803603602081101561004657600080fd5b81019080803560020b9060200190929190505050610061565b005b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8160020b131561009757600080fd5b60008160020b136100a757600080fd5b6000818260020b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b816100d957fe5b050290506000828360020b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8161011257fe5b050290506000610121846101b3565b90508260000360020b8260020b1461013557fe5b60008260020b1361014257fe5b60008460020b84840360020b8161015557fe5b0760020b1461016057fe5b600060018560020b85850360020b8161017557fe5b0560020b0190506fffffffffffffffffffffffffffffffff801681836fffffffffffffffffffffffffffffffff160211156101ac57fe5b5050505050565b600080828360020b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b816101e657fe5b050290506000838460020b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8161021f57fe5b05029050600060018560020b84840360020b8161023857fe5b050190508062ffffff166fffffffffffffffffffffffffffffffff80168161025c57fe5b04935050505091905056fea26469706673582212207b57a895155bb8b0118a54cd2234d420f65042d094165e5d55baf4611440601a64736f6c63430007060033";

export class TickEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TickEchidnaTest> {
    return super.deploy(overrides || {}) as Promise<TickEchidnaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickEchidnaTest {
    return super.attach(address) as TickEchidnaTest;
  }
  connect(signer: Signer): TickEchidnaTest__factory {
    return super.connect(signer) as TickEchidnaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickEchidnaTestInterface {
    return new utils.Interface(_abi) as TickEchidnaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickEchidnaTest {
    return new Contract(address, _abi, signerOrProvider) as TickEchidnaTest;
  }
}
