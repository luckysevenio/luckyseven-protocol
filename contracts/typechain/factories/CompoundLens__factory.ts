/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundLens, CompoundLensInterface } from "../CompoundLens";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalancesAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenMetadataAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenUnderlyingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenUnderlyingPriceAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract ComptrollerLensInterface",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountLimits",
    outputs: [
      {
        components: [
          {
            internalType: "contract CToken[]",
            name: "markets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortfall",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.AccountLimits",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract Comp",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadata",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract Comp",
        name: "comp",
        type: "address",
      },
      {
        internalType: "contract ComptrollerLensInterface",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadataExt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocated",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadataExt",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract Comp",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "blockNumbers",
        type: "uint32[]",
      },
    ],
    name: "getCompVotes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract GovernorBravoInterface",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "abstainVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovBravoProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract GovernorBravoInterface",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "support",
            type: "uint8",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovBravoReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract GovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract GovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506156b180620000216000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063595642191161008c578063969948691161006657806396994869146102cf578063995ed99f146102ff578063bdf950c91461032f578063c5ae59341461035f576100ea565b8063595642191461023f57806375d80e901461026f5780637dd8f6d91461029f576100ea565b80632b2d5ed6116100c85780632b2d5ed61461017f578063416405d7146101af57806343c811cc146101df5780634b70d84b1461020f576100ea565b80630972bf8b146100ef578063158eca8b1461011f5780631ea637411461014f575b600080fd5b610109600480360361010491908101906135d1565b61038f565b6040516101169190614cb4565b60405180910390f35b610139600480360361013491908101906136a6565b610441565b6040516101469190614e3e565b60405180910390f35b610169600480360361016491908101906137b3565b610cbf565b6040516101769190614e75565b60405180910390f35b6101996004803603610194919081019061358c565b6110c4565b6040516101a69190614cf8565b60405180910390f35b6101c960048036036101c4919081019061370b565b611174565b6040516101d69190614e90565b60405180910390f35b6101f960048036036101f49190810190613926565b61135b565b6040516102069190614d5e565b60405180910390f35b6102296004803603610224919081019061358c565b6114dd565b6040516102369190614cd6565b60405180910390f35b61025960048036036102549190810190613747565b61158d565b6040516102669190614d1a565b60405180910390f35b6102896004803603610284919081019061398d565b611705565b6040516102969190614d3c565b60405180910390f35b6102b960048036036102b4919081019061382b565b6118ed565b6040516102c69190614e01565b60405180910390f35b6102e960048036036102e491908101906138ce565b611a49565b6040516102f69190614d80565b60405180910390f35b61031960048036036103149190810190613867565b611c2a565b6040516103269190614da2565b60405180910390f35b610349600480360361034491908101906136cf565b611dab565b6040516103569190614e23565b60405180910390f35b610379600480360361037491908101906136a6565b612252565b6040516103869190614e5a565b60405180910390f35b606060008484905090506060816040519080825280602002602001820160405280156103d557816020015b6103c26127d9565b8152602001906001900390816103ba5790505b50905060008090505b82811015610434576104108787838181106103f557fe5b905060200201602061040a91908101906136a6565b86611dab565b82828151811061041c57fe5b602002602001018190525080806001019150506103de565b5080925050509392505050565b610449612825565b60008273ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104cb9190810190613acb565b905060008373ffffffffffffffffffffffffffffffffffffffff16635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561051557600080fd5b505afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061054d9190810190613802565b90506000808273ffffffffffffffffffffffffffffffffffffffff16638e8f294b876040518263ffffffff1660e01b815260040161058b9190614c2c565b604080518083038186803b1580156105a257600080fd5b505afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105da919081019061366a565b915091506000806106a28873ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561062a57600080fd5b505afa15801561063e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506106679190810190613a0e565b6040518060400160405280600481526020017f634554480000000000000000000000000000000000000000000000000000000081525061241a565b156106b457600091506012905061083b565b60008890508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ff57600080fd5b505afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061073791908101906134a0565b92508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561077f57600080fd5b505afa158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107b791908101906134a0565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156107fc57600080fd5b505afa158015610810573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108349190810190613c32565b60ff169150505b604051806101c001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018973ffffffffffffffffffffffffffffffffffffffff1663ae9d70b06040518163ffffffff1660e01b815260040160206040518083038186803b1580156108af57600080fd5b505afa1580156108c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108e79190810190613acb565b81526020018973ffffffffffffffffffffffffffffffffffffffff1663f8f9da286040518163ffffffff1660e01b815260040160206040518083038186803b15801561093257600080fd5b505afa158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061096a9190810190613acb565b81526020018973ffffffffffffffffffffffffffffffffffffffff1663173b99046040518163ffffffff1660e01b815260040160206040518083038186803b1580156109b557600080fd5b505afa1580156109c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109ed9190810190613acb565b81526020018973ffffffffffffffffffffffffffffffffffffffff166347bd37186040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a709190810190613acb565b81526020018973ffffffffffffffffffffffffffffffffffffffff16638f840ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610abb57600080fd5b505afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610af39190810190613acb565b81526020018973ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3e57600080fd5b505afa158015610b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b769190810190613acb565b81526020018973ffffffffffffffffffffffffffffffffffffffff16633b1d21a26040518163ffffffff1660e01b815260040160206040518083038186803b158015610bc157600080fd5b505afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bf99190810190613acb565b815260200185151581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6e57600080fd5b505afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ca69190810190613c32565b60ff168152602001828152509650505050505050919050565b610cc76128c2565b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610d029190614c2c565b60206040518083038186803b158015610d1a57600080fd5b505afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d529190810190613acb565b90508373ffffffffffffffffffffffffffffffffffffffff1663e9af0292846040518263ffffffff1660e01b8152600401610d8d9190614c2c565b600060405180830381600087803b158015610da757600080fd5b505af1158015610dbb573d6000803e3d6000fd5b5050505060008573ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401610dfa9190614c2c565b60206040518083038186803b158015610e1257600080fd5b505afa158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e4a9190810190613acb565b905060008573ffffffffffffffffffffffffffffffffffffffff1663cc7ebdc4866040518263ffffffff1660e01b8152600401610e879190614c2c565b60206040518083038186803b158015610e9f57600080fd5b505afa158015610eb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ed79190810190613acb565b90506000610f1b82846040518060400160405280600e81526020017f73756d20636f6d7020746f74616c000000000000000000000000000000000000815250612473565b90506000610f5f82866040518060400160405280600d81526020017f73756220616c6c6f6361746564000000000000000000000000000000000000008152506124cd565b905060405180608001604052808681526020018a73ffffffffffffffffffffffffffffffffffffffff1663b4b5ea578a6040518263ffffffff1660e01b8152600401610fab9190614c2c565b60206040518083038186803b158015610fc357600080fd5b505afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ffb9190810190613c5b565b6bffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1663587cde1e8a6040518263ffffffff1660e01b81526004016110479190614c2c565b60206040518083038186803b15801561105f57600080fd5b505afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061109791908101906134a0565b73ffffffffffffffffffffffffffffffffffffffff16815260200182815250955050505050509392505050565b6060600083839050905060608160405190808252806020026020018201604052801561110a57816020015b6110f7612900565b8152602001906001900390816110ef5790505b50905060008090505b828110156111685761114486868381811061112a57fe5b905060200201602061113f91908101906136a6565b612252565b82828151811061115057fe5b60200260200101819052508080600101915050611113565b50809250505092915050565b61117c612930565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016111c09190614c2c565b60206040518083038186803b1580156111d857600080fd5b505afa1580156111ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112109190810190613acb565b81526020018473ffffffffffffffffffffffffffffffffffffffff1663b4b5ea57856040518263ffffffff1660e01b815260040161124e9190614c2c565b60206040518083038186803b15801561126657600080fd5b505afa15801561127a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061129e9190810190613c5b565b6bffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1663587cde1e856040518263ffffffff1660e01b81526004016112ea9190614c2c565b60206040518083038186803b15801561130257600080fd5b505afa158015611316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061133a91908101906134a0565b73ffffffffffffffffffffffffffffffffffffffff16815250905092915050565b606060008251905060608160405190808252806020026020018201604052801561139f57816020015b61138c612967565b8152602001906001900390816113845790505b50905060008090505b828110156114d0576113b86129a2565b8773ffffffffffffffffffffffffffffffffffffffff1663e23a9a528784815181106113e057fe5b6020026020010151896040518363ffffffff1660e01b8152600401611406929190614ec6565b60606040518083038186803b15801561141e57600080fd5b505afa158015611432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114569190810190613aa2565b9050604051806080016040528087848151811061146f57fe5b60200260200101518152602001826000015115158152602001826020015160ff16815260200182604001516bffffffffffffffffffffffff168152508383815181106114b757fe5b60200260200101819052505080806001019150506113a8565b5080925050509392505050565b6060600083839050905060608160405190808252806020026020018201604052801561152357816020015b6115106129d6565b8152602001906001900390816115085790505b50905060008090505b828110156115815761155d86868381811061154357fe5b905060200201602061155891908101906136a6565b610441565b82828151811061156957fe5b6020026020010181905250808060010191505061152c565b50809250505092915050565b606080838390506040519080825280602002602001820160405280156115cd57816020015b6115ba612a73565b8152602001906001900390816115b25790505b50905060008090505b848490508110156116f85760405180604001604052808686848181106115f857fe5b905060200201602061160d9190810190613c09565b63ffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1663782d6fe18989898781811061164157fe5b90506020020160206116569190810190613c09565b6040518363ffffffff1660e01b8152600401611673929190614c8b565b60206040518083038186803b15801561168b57600080fd5b505afa15801561169f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116c39190810190613c5b565b6bffffffffffffffffffffffff168152508282815181106116e057fe5b602002602001018190525080806001019150506115d6565b5080915050949350505050565b6060808383905060405190808252806020026020018201604052801561174557816020015b611732612a8d565b81526020019060019003908161172a5790505b50905060008090505b848490508110156118e1576060806060808973ffffffffffffffffffffffffffffffffffffffff1663328dd9828a8a8881811061178757fe5b905060200201356040518263ffffffff1660e01b81526004016117aa9190614eab565b60006040518083038186803b1580156117c257600080fd5b505afa1580156117d6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506117ff91908101906134c9565b9350935093509350604051806101c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200185815260200184815260200183815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525086868151811061189557fe5b60200260200101819052506118d08686815181106118af57fe5b60200260200101518b8b8b898181106118c457fe5b90506020020135612528565b50505050808060010191505061174e565b50809150509392505050565b6118f5612b16565b60008060008573ffffffffffffffffffffffffffffffffffffffff16635ec88c79866040518263ffffffff1660e01b81526004016119339190614c2c565b60606040518083038186803b15801561194b57600080fd5b505afa15801561195f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119839190810190613bba565b9250925092506000831461199657600080fd5b60405180606001604052808773ffffffffffffffffffffffffffffffffffffffff1663abfceffc886040518263ffffffff1660e01b81526004016119da9190614c2c565b60006040518083038186803b1580156119f257600080fd5b505afa158015611a06573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611a2f9190810190613629565b815260200183815260200182815250935050505092915050565b60608083839050604051908082528060200260200182016040528015611a8957816020015b611a76612b37565b815260200190600190039081611a6e5790505b50905060008090505b84849050811015611c1e576060806060808973ffffffffffffffffffffffffffffffffffffffff1663328dd9828a8a88818110611acb57fe5b905060200201356040518263ffffffff1660e01b8152600401611aee9190614eab565b60006040518083038186803b158015611b0657600080fd5b505afa158015611b1a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611b4391908101906134c9565b9350935093509350604051806101a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020018581526020018481526020018381526020018281526020016000815260200160008152602001600081526020016000815260200160001515815260200160001515815250868681518110611bd257fe5b6020026020010181905250611c0d868681518110611bec57fe5b60200260200101518b8b8b89818110611c0157fe5b9050602002013561268c565b505050508080600101915050611a92565b50809150509392505050565b6060600082519050606081604051908082528060200260200182016040528015611c6e57816020015b611c5b612bb9565b815260200190600190039081611c535790505b50905060008090505b82811015611d9e57611c87612bf3565b8773ffffffffffffffffffffffffffffffffffffffff1663e23a9a52878481518110611caf57fe5b6020026020010151896040518363ffffffff1660e01b8152600401611cd5929190614ec6565b60606040518083038186803b158015611ced57600080fd5b505afa158015611d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d259190810190613a79565b90506040518060800160405280878481518110611d3e57fe5b6020026020010151815260200182600001511515815260200182602001511515815260200182604001516bffffffffffffffffffffffff16815250838381518110611d8557fe5b6020026020010181905250508080600101915050611c77565b5080925050509392505050565b611db3612c26565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401611dee9190614c47565b60206040518083038186803b158015611e0657600080fd5b505afa158015611e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e3e9190810190613acb565b905060008473ffffffffffffffffffffffffffffffffffffffff166317bfdfbc856040518263ffffffff1660e01b8152600401611e7b9190614c47565b602060405180830381600087803b158015611e9557600080fd5b505af1158015611ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ecd9190810190613acb565b905060008573ffffffffffffffffffffffffffffffffffffffff16633af9e669866040518263ffffffff1660e01b8152600401611f0a9190614c47565b602060405180830381600087803b158015611f2457600080fd5b505af1158015611f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f5c9190810190613acb565b90506000806120228873ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015611faa57600080fd5b505afa158015611fbe573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611fe79190810190613a0e565b6040518060400160405280600481526020017f634554480000000000000000000000000000000000000000000000000000000081525061241a565b15612060578673ffffffffffffffffffffffffffffffffffffffff163191508673ffffffffffffffffffffffffffffffffffffffff16319050612202565b600088905060008173ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156120ad57600080fd5b505afa1580156120c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120e591908101906134a0565b90508073ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b81526004016121209190614c47565b60206040518083038186803b15801561213857600080fd5b505afa15801561214c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121709190810190613acb565b93508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e8a8c6040518363ffffffff1660e01b81526004016121ad929190614c62565b60206040518083038186803b1580156121c557600080fd5b505afa1580156121d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121fd9190810190613acb565b925050505b6040518060c001604052808973ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152602001838152602001828152509550505050505092915050565b61225a612c72565b60008273ffffffffffffffffffffffffffffffffffffffff16635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156122a257600080fd5b505afa1580156122b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122da9190810190613802565b905060008173ffffffffffffffffffffffffffffffffffffffff16637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561232457600080fd5b505afa158015612338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061235c91908101906139e5565b905060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1663fc57d4df876040518263ffffffff1660e01b81526004016123be9190614dc4565b60206040518083038186803b1580156123d657600080fd5b505afa1580156123ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061240e9190810190613acb565b81525092505050919050565b60008160405160200161242d9190614c15565b60405160208183030381529060405280519060200120836040516020016124549190614c15565b6040516020818303038152906040528051906020012014905092915050565b60008083850190508481101583906124c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b89190614ddf565b60405180910390fd5b50809150509392505050565b6000838311158290612515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161250c9190614ddf565b60405180910390fd5b5060008385039050809150509392505050565b612530612ca2565b8273ffffffffffffffffffffffffffffffffffffffff1663013cf08b836040518263ffffffff1660e01b81526004016125699190614eab565b6101406040518083038186803b15801561258257600080fd5b505afa158015612596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506125ba9190810190613a4f565b9050818460000181815250508060200151846020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050806040015184604001818152505080606001518460e00181815250508060800151846101000181815250508060a00151846101200181815250508060c00151846101400181815250508060e001518461016001818152505080610100015184610180019015159081151581525050806101200151846101a001901515908115158152505050505050565b6000806000806000806000808973ffffffffffffffffffffffffffffffffffffffff1663013cf08b8a6040518263ffffffff1660e01b81526004016126d19190614eab565b6101206040518083038186803b1580156126ea57600080fd5b505afa1580156126fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127229190810190613af4565b9850985098509850985098509850985050888b6000018181525050878b6020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050868b6040018181525050858b60e0018181525050848b610100018181525050838b610120018181525050828b610140018181525050818b610160019015159081151581525050808b6101800190151590811515815250505050505050505050505050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b60405180608001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b60405180606001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b604051806080016040528060008152602001600015158152602001600060ff16815260200160006bffffffffffffffffffffffff1681525090565b6040518060600160405280600015158152602001600060ff16815260200160006bffffffffffffffffffffffff1681525090565b604051806101c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b604051806101c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b60405180606001604052806060815260200160008152602001600081525090565b604051806101a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b60405180608001604052806000815260200160001515815260200160001515815260200160006bffffffffffffffffffffffff1681525090565b604051806060016040528060001515815260200160001515815260200160006bffffffffffffffffffffffff1681525090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b60405180610140016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b600081359050612d1e8161552c565b92915050565b600081519050612d338161552c565b92915050565b600081359050612d4881615543565b92915050565b600082601f830112612d5f57600080fd5b8151612d72612d6d82614f1c565b614eef565b91508181835260208401935060208101905083856020840282011115612d9757600080fd5b60005b83811015612dc75781612dad8882612d24565b845260208401935060208301925050600181019050612d9a565b5050505092915050565b600082601f830112612de257600080fd5b8151612df5612df082614f44565b614eef565b9150818183526020840193506020810190508360005b83811015612e3b5781518601612e218882613135565b845260208401935060208301925050600181019050612e0b565b5050505092915050565b60008083601f840112612e5757600080fd5b8235905067ffffffffffffffff811115612e7057600080fd5b602083019150836020820283011115612e8857600080fd5b9250929050565b600082601f830112612ea057600080fd5b8151612eb3612eae82614f6c565b614eef565b91508181835260208401935060208101905083856020840282011115612ed857600080fd5b60005b83811015612f085781612eee888261319e565b845260208401935060208301925050600181019050612edb565b5050505092915050565b600082601f830112612f2357600080fd5b8151612f36612f3182614f94565b614eef565b9150818183526020840193506020810190508360005b83811015612f7c5781518601612f628882613231565b845260208401935060208301925050600181019050612f4c565b5050505092915050565b60008083601f840112612f9857600080fd5b8235905067ffffffffffffffff811115612fb157600080fd5b602083019150836020820283011115612fc957600080fd5b9250929050565b600082601f830112612fe157600080fd5b8135612ff4612fef82614fbc565b614eef565b9150818183526020840193506020810190508385602084028201111561301957600080fd5b60005b83811015613049578161302f8882613437565b84526020840193506020830192505060018101905061301c565b5050505092915050565b600082601f83011261306457600080fd5b815161307761307282614fbc565b614eef565b9150818183526020840193506020810190508385602084028201111561309c57600080fd5b60005b838110156130cc57816130b2888261344c565b84526020840193506020830192505060018101905061309f565b5050505092915050565b60008083601f8401126130e857600080fd5b8235905067ffffffffffffffff81111561310157600080fd5b60208301915083602082028301111561311957600080fd5b9250929050565b60008151905061312f8161555a565b92915050565b600082601f83011261314657600080fd5b815161315961315482614fe4565b614eef565b9150808252602083016020830185838301111561317557600080fd5b6131808382846154e8565b50505092915050565b60008135905061319881615571565b92915050565b6000815190506131ad81615571565b92915050565b6000813590506131c281615588565b92915050565b6000815190506131d78161559f565b92915050565b6000813590506131ec816155b6565b92915050565b600081359050613201816155cd565b92915050565b600081359050613216816155e4565b92915050565b60008151905061322b816155fb565b92915050565b600082601f83011261324257600080fd5b815161325561325082615010565b614eef565b9150808252602083016020830185838301111561327157600080fd5b61327c8382846154e8565b50505092915050565b6000610140828403121561329857600080fd5b6132a3610140614eef565b905060006132b38482850161344c565b60008301525060206132c784828501612d24565b60208301525060406132db8482850161344c565b60408301525060606132ef8482850161344c565b60608301525060806133038482850161344c565b60808301525060a06133178482850161344c565b60a08301525060c061332b8482850161344c565b60c08301525060e061333f8482850161344c565b60e08301525061010061335484828501613120565b6101008301525061012061336a84828501613120565b6101208301525092915050565b60006060828403121561338957600080fd5b6133936060614eef565b905060006133a384828501613120565b60008301525060206133b784828501613120565b60208301525060406133cb8482850161348b565b60408301525092915050565b6000606082840312156133e957600080fd5b6133f36060614eef565b9050600061340384828501613120565b600083015250602061341784828501613476565b602083015250604061342b8482850161348b565b60408301525092915050565b60008135905061344681615612565b92915050565b60008151905061345b81615612565b92915050565b60008135905061347081615629565b92915050565b60008151905061348581615640565b92915050565b60008151905061349a81615657565b92915050565b6000602082840312156134b257600080fd5b60006134c084828501612d24565b91505092915050565b600080600080608085870312156134df57600080fd5b600085015167ffffffffffffffff8111156134f957600080fd5b61350587828801612d4e565b945050602085015167ffffffffffffffff81111561352257600080fd5b61352e87828801613053565b935050604085015167ffffffffffffffff81111561354b57600080fd5b61355787828801612f12565b925050606085015167ffffffffffffffff81111561357457600080fd5b61358087828801612dd1565b91505092959194509250565b6000806020838503121561359f57600080fd5b600083013567ffffffffffffffff8111156135b957600080fd5b6135c585828601612e45565b92509250509250929050565b6000806000604084860312156135e657600080fd5b600084013567ffffffffffffffff81111561360057600080fd5b61360c86828701612e45565b9350935050602061361f86828701612d39565b9150509250925092565b60006020828403121561363b57600080fd5b600082015167ffffffffffffffff81111561365557600080fd5b61366184828501612e8f565b91505092915050565b6000806040838503121561367d57600080fd5b600061368b85828601613120565b925050602061369c8582860161344c565b9150509250929050565b6000602082840312156136b857600080fd5b60006136c684828501613189565b91505092915050565b600080604083850312156136e257600080fd5b60006136f085828601613189565b925050602061370185828601612d39565b9150509250929050565b6000806040838503121561371e57600080fd5b600061372c858286016131b3565b925050602061373d85828601612d0f565b9150509250929050565b6000806000806060858703121561375d57600080fd5b600061376b878288016131b3565b945050602061377c87828801612d0f565b935050604085013567ffffffffffffffff81111561379957600080fd5b6137a5878288016130d6565b925092505092959194509250565b6000806000606084860312156137c857600080fd5b60006137d6868287016131b3565b93505060206137e7868287016131dd565b92505060406137f886828701612d0f565b9150509250925092565b60006020828403121561381457600080fd5b6000613822848285016131c8565b91505092915050565b6000806040838503121561383e57600080fd5b600061384c858286016131dd565b925050602061385d85828601612d0f565b9150509250929050565b60008060006060848603121561387c57600080fd5b600061388a868287016131f2565b935050602061389b86828701612d0f565b925050604084013567ffffffffffffffff8111156138b857600080fd5b6138c486828701612fd0565b9150509250925092565b6000806000604084860312156138e357600080fd5b60006138f1868287016131f2565b935050602084013567ffffffffffffffff81111561390e57600080fd5b61391a86828701612f86565b92509250509250925092565b60008060006060848603121561393b57600080fd5b600061394986828701613207565b935050602061395a86828701612d0f565b925050604084013567ffffffffffffffff81111561397757600080fd5b61398386828701612fd0565b9150509250925092565b6000806000604084860312156139a257600080fd5b60006139b086828701613207565b935050602084013567ffffffffffffffff8111156139cd57600080fd5b6139d986828701612f86565b92509250509250925092565b6000602082840312156139f757600080fd5b6000613a058482850161321c565b91505092915050565b600060208284031215613a2057600080fd5b600082015167ffffffffffffffff811115613a3a57600080fd5b613a4684828501613231565b91505092915050565b60006101408284031215613a6257600080fd5b6000613a7084828501613285565b91505092915050565b600060608284031215613a8b57600080fd5b6000613a9984828501613377565b91505092915050565b600060608284031215613ab457600080fd5b6000613ac2848285016133d7565b91505092915050565b600060208284031215613add57600080fd5b6000613aeb8482850161344c565b91505092915050565b60008060008060008060008060006101208a8c031215613b1357600080fd5b6000613b218c828d0161344c565b9950506020613b328c828d01612d24565b9850506040613b438c828d0161344c565b9750506060613b548c828d0161344c565b9650506080613b658c828d0161344c565b95505060a0613b768c828d0161344c565b94505060c0613b878c828d0161344c565b93505060e0613b988c828d01613120565b925050610100613baa8c828d01613120565b9150509295985092959850929598565b600080600060608486031215613bcf57600080fd5b6000613bdd8682870161344c565b9350506020613bee8682870161344c565b9250506040613bff8682870161344c565b9150509250925092565b600060208284031215613c1b57600080fd5b6000613c2984828501613461565b91505092915050565b600060208284031215613c4457600080fd5b6000613c5284828501613476565b91505092915050565b600060208284031215613c6d57600080fd5b6000613c7b8482850161348b565b91505092915050565b6000613c908383613dbc565b60208301905092915050565b6000613ca8838361430b565b905092915050565b6000613cbc8383614344565b60208301905092915050565b6000613cd483836143cc565b905092915050565b6000613ce883836144d0565b60c08301905092915050565b6000613d00838361466b565b6101c08301905092915050565b6000613d1983836147ba565b60408301905092915050565b6000613d318383614880565b60408301905092915050565b6000613d4983836148af565b905092915050565b6000613d5d83836149f2565b60808301905092915050565b6000613d758383614a47565b905092915050565b6000613d898383614b75565b60808301905092915050565b6000613da18383614bca565b60208301905092915050565b613db68161547c565b82525050565b613dc58161536f565b82525050565b613dd48161536f565b82525050565b6000613de58261510c565b613def8185615265565b9350613dfa8361503c565b8060005b83811015613e2b578151613e128882613c84565b9750613e1d836151bc565b925050600181019050613dfe565b5085935050505092915050565b6000613e4382615117565b613e4d8185615276565b935083602082028501613e5f8561504c565b8060005b85811015613e9b5784840389528151613e7c8582613c9c565b9450613e87836151c9565b925060208a01995050600181019050613e63565b50829750879550505050505092915050565b6000613eb882615122565b613ec28185615265565b9350613ecd8361505c565b8060005b83811015613efe578151613ee58882613cb0565b9750613ef0836151d6565b925050600181019050613ed1565b5085935050505092915050565b6000613f168261512d565b613f208185615287565b935083602082028501613f328561506c565b8060005b85811015613f6e5784840389528151613f4f8582613cc8565b9450613f5a836151e3565b925060208a01995050600181019050613f36565b50829750879550505050505092915050565b6000613f8b82615138565b613f958185615298565b9350613fa08361507c565b8060005b83811015613fd1578151613fb88882613cdc565b9750613fc3836151f0565b925050600181019050613fa4565b5085935050505092915050565b6000613fe982615143565b613ff381856152a9565b9350613ffe8361508c565b8060005b8381101561402f5781516140168882613cf4565b9750614021836151fd565b925050600181019050614002565b5085935050505092915050565b60006140478261514e565b61405181856152ba565b935061405c8361509c565b8060005b8381101561408d5781516140748882613d0d565b975061407f8361520a565b925050600181019050614060565b5085935050505092915050565b60006140a582615159565b6140af81856152cb565b93506140ba836150ac565b8060005b838110156140eb5781516140d28882613d25565b97506140dd83615217565b9250506001810190506140be565b5085935050505092915050565b600061410382615164565b61410d81856152dc565b93508360208202850161411f856150bc565b8060005b8581101561415b578484038952815161413c8582613d3d565b945061414783615224565b925060208a01995050600181019050614123565b50829750879550505050505092915050565b60006141788261516f565b61418281856152ed565b935061418d836150cc565b8060005b838110156141be5781516141a58882613d51565b97506141b083615231565b925050600181019050614191565b5085935050505092915050565b60006141d68261517a565b6141e081856152fe565b9350836020820285016141f2856150dc565b8060005b8581101561422e578484038952815161420f8582613d69565b945061421a8361523e565b925060208a019950506001810190506141f6565b50829750879550505050505092915050565b600061424b82615185565b614255818561530f565b9350614260836150ec565b8060005b838110156142915781516142788882613d7d565b97506142838361524b565b925050600181019050614264565b5085935050505092915050565b60006142a982615190565b6142b38185615320565b93506142be836150fc565b8060005b838110156142ef5781516142d68882613d95565b97506142e183615258565b9250506001810190506142c2565b5085935050505092915050565b61430581615393565b82525050565b60006143168261519b565b6143208185615331565b93506143308185602086016154e8565b6143398161551b565b840191505092915050565b61434d8161548e565b82525050565b61435c8161548e565b82525050565b600061436d826151b1565b6143778185615353565b93506143878185602086016154e8565b6143908161551b565b840191505092915050565b60006143a6826151b1565b6143b08185615364565b93506143c08185602086016154e8565b80840191505092915050565b60006143d7826151a6565b6143e18185615342565b93506143f18185602086016154e8565b6143fa8161551b565b840191505092915050565b600060608301600083015184820360008601526144228282613ead565b91505060208301516144376020860182614bca565b50604083015161444a6040860182614bca565b508091505092915050565b60c08201600082015161446b6000850182613dbc565b50602082015161447e6020850182614bca565b5060408201516144916040850182614bca565b5060608201516144a46060850182614bca565b5060808201516144b76080850182614bca565b5060a08201516144ca60a0850182614bca565b50505050565b60c0820160008201516144e66000850182613dbc565b5060208201516144f96020850182614bca565b50604082015161450c6040850182614bca565b50606082015161451f6060850182614bca565b5060808201516145326080850182614bca565b5060a082015161454560a0850182614bca565b50505050565b6101c0820160008201516145626000850182613dbc565b5060208201516145756020850182614bca565b5060408201516145886040850182614bca565b50606082015161459b6060850182614bca565b5060808201516145ae6080850182614bca565b5060a08201516145c160a0850182614bca565b5060c08201516145d460c0850182614bca565b5060e08201516145e760e0850182614bca565b506101008201516145fc610100850182614bca565b506101208201516146116101208501826142fc565b50610140820151614626610140850182614bca565b5061016082015161463b610160850182613dbc565b50610180820151614650610180850182614bca565b506101a08201516146656101a0850182614bca565b50505050565b6101c0820160008201516146826000850182613dbc565b5060208201516146956020850182614bca565b5060408201516146a86040850182614bca565b5060608201516146bb6060850182614bca565b5060808201516146ce6080850182614bca565b5060a08201516146e160a0850182614bca565b5060c08201516146f460c0850182614bca565b5060e082015161470760e0850182614bca565b5061010082015161471c610100850182614bca565b506101208201516147316101208501826142fc565b50610140820151614746610140850182614bca565b5061016082015161475b610160850182613dbc565b50610180820151614770610180850182614bca565b506101a08201516147856101a0850182614bca565b50505050565b6040820160008201516147a16000850182613dbc565b5060208201516147b46020850182614bca565b50505050565b6040820160008201516147d06000850182613dbc565b5060208201516147e36020850182614bca565b50505050565b6080820160008201516147ff6000850182614bca565b5060208201516148126020850182614bca565b5060408201516148256040850182613dbc565b5060608201516148386060850182614bca565b50505050565b6060820160008201516148546000850182614bca565b5060208201516148676020850182614bca565b50604082015161487a6040850182613dbc565b50505050565b6040820160008201516148966000850182614bca565b5060208201516148a96020850182614bca565b50505050565b60006101c0830160008301516148c86000860182614bca565b5060208301516148db6020860182613dbc565b5060408301516148ee6040860182614bca565b50606083015184820360608601526149068282613dda565b91505060808301518482036080860152614920828261429e565b91505060a083015184820360a086015261493a8282613f0b565b91505060c083015184820360c08601526149548282613e38565b91505060e083015161496960e0860182614bca565b5061010083015161497e610100860182614bca565b50610120830151614993610120860182614bca565b506101408301516149a8610140860182614bca565b506101608301516149bd610160860182614bca565b506101808301516149d26101808601826142fc565b506101a08301516149e76101a08601826142fc565b508091505092915050565b608082016000820151614a086000850182614bca565b506020820151614a1b60208501826142fc565b506040820151614a2e6040850182614bf7565b506060820151614a416060850182614c06565b50505050565b60006101a083016000830151614a606000860182614bca565b506020830151614a736020860182613dbc565b506040830151614a866040860182614bca565b5060608301518482036060860152614a9e8282613dda565b91505060808301518482036080860152614ab8828261429e565b91505060a083015184820360a0860152614ad28282613f0b565b91505060c083015184820360c0860152614aec8282613e38565b91505060e0830151614b0160e0860182614bca565b50610100830151614b16610100860182614bca565b50610120830151614b2b610120860182614bca565b50610140830151614b40610140860182614bca565b50610160830151614b556101608601826142fc565b50610180830151614b6a6101808601826142fc565b508091505092915050565b608082016000820151614b8b6000850182614bca565b506020820151614b9e60208501826142fc565b506040820151614bb160408501826142fc565b506060820151614bc46060850182614c06565b50505050565b614bd38161543d565b82525050565b614be28161543d565b82525050565b614bf1816154d6565b82525050565b614c0081615457565b82525050565b614c0f81615464565b82525050565b6000614c21828461439b565b915081905092915050565b6000602082019050614c416000830184613dcb565b92915050565b6000602082019050614c5c6000830184613dad565b92915050565b6000604082019050614c776000830185613dad565b614c846020830184613dcb565b9392505050565b6000604082019050614ca06000830185613dcb565b614cad6020830184614be8565b9392505050565b60006020820190508181036000830152614cce8184613f80565b905092915050565b60006020820190508181036000830152614cf08184613fde565b905092915050565b60006020820190508181036000830152614d12818461403c565b905092915050565b60006020820190508181036000830152614d34818461409a565b905092915050565b60006020820190508181036000830152614d5681846140f8565b905092915050565b60006020820190508181036000830152614d78818461416d565b905092915050565b60006020820190508181036000830152614d9a81846141cb565b905092915050565b60006020820190508181036000830152614dbc8184614240565b905092915050565b6000602082019050614dd96000830184614353565b92915050565b60006020820190508181036000830152614df98184614362565b905092915050565b60006020820190508181036000830152614e1b8184614405565b905092915050565b600060c082019050614e386000830184614455565b92915050565b60006101c082019050614e54600083018461454b565b92915050565b6000604082019050614e6f600083018461478b565b92915050565b6000608082019050614e8a60008301846147e9565b92915050565b6000606082019050614ea5600083018461483e565b92915050565b6000602082019050614ec06000830184614bd9565b92915050565b6000604082019050614edb6000830185614bd9565b614ee86020830184613dcb565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715614f1257600080fd5b8060405250919050565b600067ffffffffffffffff821115614f3357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614f5b57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614f8357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614fab57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614fd357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614ffb57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561502757600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061537a8261541d565b9050919050565b600061538c8261541d565b9050919050565b60008115159050919050565b60006153aa8261536f565b9050919050565b60006153bc8261536f565b9050919050565b60006153ce8261536f565b9050919050565b60006153e08261536f565b9050919050565b60006153f28261536f565b9050919050565b60006154048261536f565b9050919050565b60006154168261536f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b6000615487826154b2565b9050919050565b6000615499826154a0565b9050919050565b60006154ab8261541d565b9050919050565b60006154bd826154c4565b9050919050565b60006154cf8261541d565b9050919050565b60006154e182615447565b9050919050565b60005b838110156155065780820151818401526020810190506154eb565b83811115615515576000848401525b50505050565b6000601f19601f8301169050919050565b6155358161536f565b811461554057600080fd5b50565b61554c81615381565b811461555757600080fd5b50565b61556381615393565b811461556e57600080fd5b50565b61557a8161539f565b811461558557600080fd5b50565b615591816153b1565b811461559c57600080fd5b50565b6155a8816153c3565b81146155b357600080fd5b50565b6155bf816153d5565b81146155ca57600080fd5b50565b6155d6816153e7565b81146155e157600080fd5b50565b6155ed816153f9565b81146155f857600080fd5b50565b6156048161540b565b811461560f57600080fd5b50565b61561b8161543d565b811461562657600080fd5b50565b61563281615447565b811461563d57600080fd5b50565b61564981615457565b811461565457600080fd5b50565b61566081615464565b811461566b57600080fd5b5056fea365627a7a72315820337e1eb72a3bdba552f99dab4b852b5931d4eb82f5bc8a72bb45509c3afcc0c26c6578706572696d656e74616cf564736f6c63430005110040";

export class CompoundLens__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundLens> {
    return super.deploy(overrides || {}) as Promise<CompoundLens>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompoundLens {
    return super.attach(address) as CompoundLens;
  }
  connect(signer: Signer): CompoundLens__factory {
    return super.connect(signer) as CompoundLens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundLensInterface {
    return new utils.Interface(_abi) as CompoundLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundLens {
    return new Contract(address, _abi, signerOrProvider) as CompoundLens;
  }
}
